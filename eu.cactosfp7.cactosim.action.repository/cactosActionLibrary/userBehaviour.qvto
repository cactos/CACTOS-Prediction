import m2m.qvt.oml.JScience;
import transforms.pcmHelperCore;
import transforms.localstorage;
import transforms.cactosAdaptationBehaviorHelper;
import simulizar_qvto_helper.logHelper;
import eu.cactosfp7.cactosim.placementconnector.PlacementConnectorUnit;
import transforms.updateRuntimeCorrespondence;
import transforms.cactos2PCMShared;
import transforms.cactos2PCMUsage;
import transforms.cactos2PCMUsageEvolution;
import eu.cactosfp7.infrastructuremodels.util.blackboxunit.InfrastructureModelUtilsBlackBoxUnit;


modeltype CACT_LCORE uses 'http://www.cactosfp7.eu/LogicalDCModel/Core/1.0';
modeltype CACT_LAPP uses 'http://www.cactosfp7.eu/LogicalDCModel/Application/1.0';
modeltype CACT_PCORE uses 'http://www.cactosfp7.eu/PhysicalDCModel/Core/1.0';
modeltype CACT_PCORR uses 'http://www.cactosfp7.eu/Correspondence/Physical/1.1';
modeltype CACT_LCORR uses 'http://www.cactosfp7.eu/Correspondence/Logical/1.1';
modeltype CACT_PUTIL uses 'http://www.cactosfp7.eu/PhysicalDCModel/Util/1.0';
modeltype PCM_COMP uses 'http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.1';
modeltype PCM_ALLOC uses 'http://palladiosimulator.org/PalladioComponentModel/Allocation/5.1';
modeltype PCM_STOEX uses 'http://sdq.ipd.uka.de/StochasticExpressions/2.2';
modeltype PCM_PARAM uses 'http://palladiosimulator.org/PalladioComponentModel/Parameter/5.1';
modeltype PCM_REP uses 'http://palladiosimulator.org/PalladioComponentModel/Repository/5.1';
modeltype PCM_SEFF uses 'http://palladiosimulator.org/PalladioComponentModel/SEFF/5.1';
modeltype PCM_SYS uses 'http://palladiosimulator.org/PalladioComponentModel/System/5.1';
modeltype PCM_RES_ENV uses 'http://palladiosimulator.org/PalladioComponentModel/ResourceEnvironment/5.1';
modeltype PCM_RES_TYPE uses 'http://palladiosimulator.org/PalladioComponentModel/ResourceType/5.1';
modeltype PCM_CORE uses 'http://palladiosimulator.org/PalladioComponentModel/Core/5.1';
modeltype ACTION_MAPPING uses 'http://simulizar.palladiosimulator.org/Actions/Mapping/1.1';
modeltype ACTION_INSTANCE uses 'http://simulizar.palladiosimulator.org/Actions/Instance/1.1';
modeltype ACTION_CORE uses 'http://simulizar.palladiosimulator.org/Actions/Core/1.1';
modeltype ACTION_PARAM uses 'http://simulizar.palladiosimulator.org/Actions/Parameter/1.1';
modeltype ACTION_CONTEXT uses 'http://simulizar.palladiosimulator.org/Actions/Context/1.1';
modeltype ECORE uses 'http://www.eclipse.org/emf/2002/Ecore';
modeltype STOEX uses 'http://sdq.ipd.uka.de/StochasticExpressions/2.2';
modeltype PLM uses 'http://www.cactosfp7.eu/CactosLoadModel/Physical/1.0';
modeltype LLM uses 'http://www.cactosfp7.eu/CactosLoadModel/Logical/1.0';
modeltype OPTIMISATION_PLAN uses 'http://www.cactosfp7.eu/OptimisationPlan/1.0';
modeltype RUNTIMEMEASUREMENT uses 'http://simulizar.palladiosimulator.org/RuntimeMeasurement/1.0';
modeltype MONITOR_CORRESPONDENCE uses 'http://www.cactosfp7.eu/Correspondence/Measurement/1.1';
modeltype USAGEEVOLUTION uses "http://usageevolution/1.0";
modeltype PCM_USAGE uses 'http://palladiosimulator.org/PalladioComponentModel/UsageModel/5.1';
modeltype USAGESEQUENCE uses "http://www.cactosfp7.eu/CactoSim/UsageSequence/1.1";
modeltype METRICSPEC uses "http://palladiosimulator.org/MetricSpec/1.0";
modeltype MONITOR_REPOSITORY uses "http://palladiosimulator.org/MonitorRepository/1.0";
modeltype MEASURINGPOINT uses "http://palladiosimulator.org/EDP2/MeasuringPoint/1.0";
modeltype PCM_MEASURINGPOINT uses "http://palladiosimulator.org/PCM/MeasuringPoint/1.0";


transformation createUserBehaviour(in metricspec : METRICSPEC,
									in resourcetypepcm : PCM_RES_TYPE,
									in primitiveresourcetyperepo : PCM_REP,
									inout lcorrespondence : CACT_LCORR,
									inout pcorrespondence : CACT_PCORR,
									inout pcmrepository : PCM_REP,
									inout pcmsystem : PCM_SYS,
									inout pcmallocation : PCM_ALLOC,
									inout pcmusage: PCM_USAGE,
									inout usageevolution: USAGEEVOLUTION,
									inout usagesequence: USAGESEQUENCE,
									out measuringpoint: PCM_MEASURINGPOINT,
									inout monitorrepository :MONITOR_REPOSITORY,
									inout logicalload : LLM,
									inout measurementcorrespondence : MONITOR_CORRESPONDENCE) {

	mapping inout ApplicationInstance::generateUserBehaviour() {
		pcmusage.rootObjects()[UsageModel]->any(true).usageScenario_UsageModel += self.map toUsageScenarios();
		usageevolution.rootObjects()[UsageEvolution]->any(true).usages += self.map toUsage();
		getOrCreateMeasuringPointRepository().measuringPoints += self.map toMeasuringPoints();
		getOrCreateMonitorRepository().monitors += self.map toMonitors();
	}
	
	mapping inout WhiteBoxApplicationInstance::generateUserBehaviour() {
		whiteBoxUserBehaviourInstance += self.map toUserBehaviourInstances();
		pcmusage.rootObjects()[UsageModel]->any(true).usageScenario_UsageModel += self.map toUsageScenarios();
		usageevolution.rootObjects()[UsageEvolution]->any(true).usages += self.map toUsage();
		getOrCreateMeasuringPointRepository().measuringPoints += self.map toMeasuringPoints();
		getOrCreateMonitorRepository().monitors += self.map toMonitors();
	}
	
	mapping WhiteBoxApplicationInstance::toUserBehaviourInstances() : Set(WhiteBoxUserBehaviourInstance) {
		init {
			result := self.applicationTemplate.oclAsType(WhiteBoxApplicationTemplate)
				.whiteBoxUserBehaviourTemplate.createWhiteBoxUserBehaviourInstance()->asSet();
		}
	}
	
	helper WhiteBoxUserBehaviourTemplate::createWhiteBoxUserBehaviourInstance(): WhiteBoxUserBehaviourInstance {
		return object WhiteBoxUserBehaviourInstance {
			name := "User Behaviour Instance of Template " + self.name;
			userBehaviours += self.userBehaviours.oclAsType(EObject).nonIdDeepClone().oclAsType(UserBehaviour);
		}
	}
							
}